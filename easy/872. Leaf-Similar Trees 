/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

public class Solution 
{
    private List<int> fn = new List<int>();
    private List<int> sn = new List<int>();

    public bool LeafSimilar(TreeNode root1, TreeNode root2) 
    {
        if(root1 != null)
        {
            if(root1.left == null && root1.right == null)
            {
                fn.Add(root1.val);
            }
            LeafSimilar(root1.left, null);
            LeafSimilar(root1.right, null);
        }

        if(root2 != null)
        {
            if(root2.left ==  null && root2.right == null)
            {
                sn.Add(root2.val);
            }

            LeafSimilar(null, root2.left);
            LeafSimilar(null, root2.right);
        }

        if(fn.Count != sn.Count)
            return false;

        for(int i = 0; i < fn.Count; i++)
        {
            if(fn[i] != sn[i])
                return false;
        }
        return true;
    }
}